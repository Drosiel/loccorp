@model LOC_WebApi.Models.RegisterModel
<html>
<head>
    <title>@ViewBag.Title</title>
    <meta charset='utf-8'>
    <meta name='viewport' , content='initial-scale=1.0, width=device-width'>
    <link href="https://fonts.googleapis.com/css?family=Russo+One&amp;subset=cyrillic,latin-ext" rel="stylesheet">
    @Styles.Render("~/bundle/main.css")
</head>

<body>
    <header class="header">
        <div class="logo">LADRAMHAIOLA</div>

        <nav class='menu'>
            <ul class="menu__list">
                <li class="menu__item"><a href="#">главная</a></li>
                <li class="menu__item"><a href="#">турниры</a></li>
                <li class="menu__item"><a href="#">статистика</a></li>
            </ul>
        </nav>
        <div>
            @User.Identity.Name
            <button class="btn btn__login">регистрация</button>
        </div>
    </header>

    @RenderBody()

    <div class="popup popup__login">
        @using (Html.BeginForm())
        {

            @Html.AntiForgeryToken()
            @Html.ValidationSummary()

            <div class="popup__title">
                <span>Регистрация</span>
                <div class="popup__close"></div>
            </div>
            <form class="form form__login">

                <div class="form__label">
                    <span>Электронный адрес</span>
                    <div>
                        @Html.EditorFor(model => model.Email)
                        @Html.ValidationMessageFor(x => x.Email)
                    </div>
                </div>
                <div class="form__label">
                    <span>Логин</span>
                    <div>
                        @Html.EditorFor(model => model.UserName)
                        @Html.ValidationMessageFor(x => x.UserName)
                    </div>
                </div>
                <div class="form__label">
                    <span>Пароль</span>
                    <div>
                        @Html.EditorFor(model => model.Password)
                        @Html.ValidationMessageFor(x => x.Password)
                    </div>
                </div>
                <div class="form__label">
                    <span>Повторите пароль</span>
                    <div>
                        @Html.EditorFor(model => model.PasswordConfirm)
                        @Html.ValidationMessageFor(x => x.PasswordConfirm)
                    </div>
                </div>

                <div class="form__btn">
                    <button type="submit" class="btn btn__submit">регистрация</button>
                </div>
            </form>
        }
    </div>

    @Scripts.Render("~/bundle/bundle.js")
</body>
</html>
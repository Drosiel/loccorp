@using LOC_WebApi.Models
@model RegisterModel
<html>
<head>
    <title>@ViewBag.Title</title>
    <meta charset='utf-8'>
    <meta name='viewport' , content='initial-scale=1.0, width=device-width'>
    <link href="https://fonts.googleapis.com/css?family=Russo+One&amp;subset=cyrillic,latin-ext" rel="stylesheet">
    @Styles.Render("~/bundle/main.css")
</head>

<body>
    <header class="header">
        <div class="logo">
            <a href="/">LADRAMHAIOLA</a>
        </div>

        <nav class='menu'>
            <ul class="menu__list">
                <li class="menu__item"><a href="#">главная</a></li>
                <li class="menu__item"><a href="#">турниры</a></li>
                <li class="menu__item"><a href="#">статистика</a></li>
            </ul>
        </nav>
        @if (@User.Identity.Name == "")
        {
        <ul class="login">
            <li class="login__item">
                <a class="btn btn__login" data-value="register">регистрация</a>
            </li>
            <li class="login__item">
                <a class="btn btn__login" data-value="login">вход</a>
            </li>
        </ul>
        }
        else
        {
        <ul>
            <li>
                @User.Identity.Name
            <li />
            <li>
                <button class="btn">@Html.ActionLink("Выход", "Logout", "Home", null, new { @class = "btn" })</button>
            </li>
        </ul>
        }
    </header>

    @RenderBody()

    <div class="popup">
        <div class="popup__inner">
            <div class="popup__wrapper regiser">
                <div class="popup__top">
                    <div class="popup__title">Регистрация</div>
                    <div class="popup__close"></div>
                </div>
                @using (Html.BeginForm("Register", "Account", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary()
                    <div class="form__label">
                        <span>Электронный адрес</span>
                        <div>
                            @Html.EditorFor(model => model.Email)
                            @Html.ValidationMessageFor(x => x.Email)
                        </div>
                    </div>
                    <div class="form__label">
                        <span>Логин</span>
                        <div>
                            @Html.EditorFor(model => model.UserName)
                            @Html.ValidationMessageFor(x => x.UserName)
                        </div>
                    </div>
                    <div class="form__label">
                        <span>Пароль</span>
                        <div>
                            @Html.EditorFor(model => model.Password)
                            @Html.ValidationMessageFor(x => x.Password)
                        </div>
                    </div>
                    <div class="form__label">
                        <span>Повторите пароль</span>
                        <div>
                            @Html.EditorFor(model => model.PasswordConfirm)
                            @Html.ValidationMessageFor(x => x.PasswordConfirm)
                        </div>
                    </div>

                    <div class="form__btn">
                        <button type="submit" class="btn btn__submit">регистрация</button>
                    </div>
                }
            </div>

            <div class="popup__wrapper login">
                <div class="popup__top">
                    <div class="popup__title">Вход</div>
                    <div class="popup__close"></div>
                </div>
                @using (Html.BeginForm("Login", "Account", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div>
                        @Html.ValidationSummary()
                        <input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />
                        <p>
                            <label>Логин</label><br />
                            @Html.EditorFor(x => x.UserName)
                        <p>
                            <label>Пароль</label><br />
                            @Html.PasswordFor(x => x.Password)
                        </p>
                        <p><button type="submit">Войти</button></p>
                        @Html.ActionLink("Зарегистрироваться", "Register", "Account", null, new { @class = "btn__submit" })
                    </div>
                }
            </div>
        </div>
        <div class="popup__layout"></div>
    </div>

    @Scripts.Render("~/bundle/bundle.js")
</body>
</html>